<?phpnamespace App\Model;class Sections extends BaseModel{    public function getSections(){        $sections = $this->database->table(DatabaseStructure::SECTIONS)->order('id DESC')->fetchAll();        $sections = $this->getArrayFromActiveRow($sections);                for($i = 0; $i<count($sections); $i++){            $sections[$i]['articlesCount'] = $this->getArticlesCount($sections[$i]['id']);        }                return $sections;    }        public function getSection($sectionId){        return $this->database->table(DatabaseStructure::SECTIONS)->where('id', $sectionId)->fetch();    }        public function getSectionContent($sectionId){        $content = $this->database->table(DatabaseStructure::SECTIONS_CONTENT)->where('sectionId', $sectionId)->order('id DESC')->fetchAll();        $content = $this->getArrayFromActiveRow($content);        for($i = 0; $i < count($content); $i++){            $content[$i]['authorName'] = $this->database->table(DatabaseStructure::USERS)->where('id', $content[$i]['author'])->fetch()['username'];        }        return $content;    }        public function getSectionContentForPaginator($sectionId, $length, $offset){        $content = $this->database->table(DatabaseStructure::SECTIONS_CONTENT)->where('sectionId', $sectionId)->order('id DESC')->limit($length, $offset)->fetchAll();        $content = $this->getArrayFromActiveRow($content);        for($i = 0; $i < count($content); $i++){            $content[$i]['authorName'] = $this->database->table(DatabaseStructure::USERS)->where('id', $content[$i]['author'])->fetch()['username'];        }        return $content;    }        public function getContent($contentId){        return $this->database->table(DatabaseStructure::SECTIONS_CONTENT)->where('id', $contentId)->fetch();    }        public function deleteContent($contentId, $basePath){        $content = $this->database->table(DatabaseStructure::SECTIONS_CONTENT)->where('id', $contentId)->fetch();        if($content['imageUrl'] != ''){                unlink($basePath . '/images/upload/sections/' . $content['imageUrl']);        }                $this->database->table(DatabaseStructure::SECTIONS_CONTENT)->where('id', $contentId)->delete();                $images = $this->getAdditionalImages($contentId);        if(count($images) > 0){            foreach($images as $row){                unlink($basePath . '/images/upload/sections/' . $row['imageUrl']);                $this->database->table(DatabaseStructure::SECTIONS_PICTURES)->where('id', $row['id'])->delete();            }        }    }        public function getArticlesCount($sectionId){        $articles = $this->database->table(DatabaseStructure::SECTIONS_CONTENT)->where('sectionId', $sectionId)->fetchAll();        $count = 0;        foreach($articles as $row){            $count++;        }        return $count;    }        public function addContent($values, $sectionId, $userId, $basePath){        if($values['image']->getSize() != null && $values['image']->getSize() <= 512000){            $ending = pathinfo($values['image']->getName(), PATHINFO_EXTENSION);            $stockFileName = pathinfo($values['image']->getName(), PATHINFO_FILENAME);            $fileName = $stockFileName . \Nette\Utils\Strings::random() . '.' . $ending;            $fileUrl = $basePath . '/images/upload/sections/' . $fileName;            $values['image']->move($fileUrl);        } else{            $fileName = '';        }		        $insertedRow = $this->database->table(DatabaseStructure::SECTIONS_CONTENT)->insert(array(            'title' => $values['title'],            'sectionId' => $sectionId,            'content' => $values['content'],            'author' => $userId,            'imageUrl' => $fileName        ));                $pictures = $values['pictures'];        if(count($pictures) >= 1){            foreach($pictures as $row){                $_ending = pathinfo($row->getName(), PATHINFO_EXTENSION);                $_fileName = \Nette\Utils\Strings::random(20) . '.' . $_ending;                $_fileUrl = $basePath . '/images/upload/sections/' . $_fileName;                $row->move($_fileUrl);                $this->database->table(DatabaseStructure::SECTIONS_PICTURES)->insert(array(                    'postId' => $insertedRow['id'],                    'imageUrl' => $_fileName                ));            }        }    }    public function editContent($values, $contentId){        $this->database->table(DatabaseStructure::SECTIONS_CONTENT)->where('id', $contentId)->update(array(            'title' => $values['title'],            'content' => $values['content'],        ));    }        public function getAdditionalImages($postId){        return $this->database->table(DatabaseStructure::SECTIONS_PICTURES)->where('postId', $postId)->fetchAll();    }}